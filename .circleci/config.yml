# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  scanner:
    docker:
      - image: openjdk:11

commands:
  check-code-quality:
    description: Check Code Quality
    parameters:
      sonar_server_url:
        type: string
        description: "URL of your SonarQube server." 
        default: "$SONAR_HOST_URL"
      sonar_login:
        description: "Authentication key (sonar.login paramter) to access SonarQube and perform analysis"
        type: string
        default: "$SONAR_TOKEN"
      sonar_sources:
        description: "Where the files are located?"
        type: string
        default: "$SONAR_SOURCES"

    steps:
        - run:
            name: ECHO
            command: echo $SONAR_HOST_URL
          
        - run:
            name: Install Sonarqube scanner
            command: |
                wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856.zip
                unzip sonar-scanner-cli-4.8.0.2856.zip

        - run:
            name: Run Sonarscanner
            command: |
                export SONAR_SCANNER_OPTS="-Xmx2048m"
                eval ./sonar-scanner-4.8.0.2856/bin/sonar-scanner \
                -Dsonar.projectKey=CircleCI-Github-Integration \
                -Dsonar.host.url=<< parameters.sonar_server_url >> \
                -Dsonar.sources=. \
                -Dsonar.login=<< parameters.sonar_login >> \
                -Dsonar.sonar.qualitygate.wait=true \
                -Dsonar.sonar.qualitygate.timeout=300

#-Dsonar.sources=<< parameters.sonar_sources >> \ Removed as it is optional.

jobs:
  check-code-job:
    executor: scanner
    steps:
      - check-code-quality
          
workflows:
  check-code-quality-flow:
    jobs:
      - check-code-job:
          context: SONAR_TOKEN
